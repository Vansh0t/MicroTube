@use "@angular/material" as mat;
@use "theme" as theme;
@use "dark-theme" as dark-theme;
@use "light-theme" as light-theme;
*,
*::before,
*::after {
  box-sizing: border-box;
}
.dark-theme {
  color-scheme: dark;
  --bg-color: rgb(15, 15, 15);
  --toolbar-color: rgb(0, 0, 0, 0);
  --text-main-color: rgb(241, 241, 241);
  --text-secondary-color: #BDBDBD;
  @include theme.use-dark-theme();
}
.dark-theme .logo-black {
  display:none;
}
.light-theme {
  color-scheme: light;
  --bg-color: rgb(255, 255, 255);
  --toolbar-color: rgb(15, 15, 15);
  --text-main-color: rgb(15, 15, 15);
  --text-secondary-color: #454444;
  @include theme.use-light-theme();
}
.light-theme .logo-white {
  display: none;
}
html, body {
  height: 100%;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif !important;
  overflow-y: hidden;
  color: var(--text-main-color) !important;
  scrollbar-color: var(--text-secondary-color) var(--bg-color);
  background-color: var(--bg-color);
}
input[type=text], input[type=email], input[type=password], input[type=tel], input[type=number] {
  margin-top: 4px !important;
}
p, h1, h2, h3, h4, h5 {
  margin: 0 0 0 0 !important;
}
a {
  max-width: 100%;
  height: auto;
  color: var(--text-main-color) !important;
  text-decoration: none;
}
//get theme dependant colors this way because css variables not getting it from scss map for some reason
.dark-theme .highlighted-link {
  color: mat.get-theme-color(dark-theme.$MicroTube-dark-theme, primary, 500) !important;
}
.light-theme .highlighted-link {
  color: mat.get-theme-color(light-theme.$MicroTube-light-theme, primary, 500) !important;
}
.highlighted-link:hover {
  text-decoration: underline;
  cursor: pointer;
}
.dense-minus-1 {
  @include mat.all-component-densities(-1);
}
.dense-minus-2 {
  @include mat.all-component-densities(-2);
}
.dense-minus-3 {
  @include mat.all-component-densities(-3);
}
.dense-minus-4 {
  @include mat.all-component-densities(-4);
}
.caption-grey {
  color: var(--text-secondary-color) !important;
}
$xs: screen and (max-width: 599px);
$sm: screen and (min-width: 600px) and (max-width: 959px);
$md: screen and (min-width: 960px) and (max-width: 1279px);
$lg: screen and (min-width: 1280px) and (max-width: 1919px);
$xl: screen and (min-width: 1920px) and (max-width: 5000px);
.right-menus-container {
  display:flex;
flex-direction:row;
}
.cdk-global-scrollblock {
  overflow-y: hidden !important;
}
